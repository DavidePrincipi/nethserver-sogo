#
# 30SOGo
#
{
    if (! defined $SogoStatus || $SogoStatus ne 'enabled') {
	return "# -- DISABLED\n";
    }

    if ( $Port == 80 || ! defined $SslMode ) {

	$sogoConf = <<SOGOREDIRECT
RewriteEngine On
RewriteRule ^/sogo(/.*)?\$ https://$ServerName/SOGo\$1 [R=301,L]
RewriteRule ^/SOGo(/.*)?\$ https://$ServerName/SOGo\$1 [R=301,L]
SOGOREDIRECT

    } else {

	$sogoConf = <<SOGOFE;

Alias /SOGo.woa/WebServerResources/ \\
      /usr/lib64/GNUstep/SOGo/WebServerResources/
Alias /SOGo/WebServerResources/ \\
      /usr/lib64/GNUstep/SOGo/WebServerResources/
AliasMatch /SOGo/so/ControlPanel/Products/(.*)/Resources/(.*) \\
           /usr/lib64/GNUstep/SOGo/\$1.SOGo/Resources/\$2

<Directory /usr/lib64/GNUstep/SOGo/>
    AllowOverride None
    Order deny,allow
    Allow from all

    # Explicitly allow caching of static content to avoid browser specific behavior.
    # A resource's URL MUST change in order to have the client load the new version.
    <IfModule expires_module>
      ExpiresActive On
      ExpiresDefault "access plus 1 year"
    </IfModule>
</Directory>

<LocationMatch "^/SOGo/so/ControlPanel/Products/.*UI/Resources/.*\.(jpg|png|gif|css|js)">
  SetHandler default-handler
</LocationMatch>

## Uncomment the following to enable proxy-side authentication, you will then
## need to set the "SOGoTrustProxyAuthentication" SOGo user default to YES and
## adjust the "x-webobjects-remote-user" proxy header in the "Proxy" section
## below.
#<Location /SOGo>
#  AuthType XXX
#  Require valid-user
#  SetEnv proxy-nokeepalive 1
#  Allow from all
#</Location>

ProxyRequests Off
SetEnv proxy-nokeepalive 1
ProxyPreserveHost On

# When using CAS, you should uncomment this and install cas-proxy-validate.py
# in /usr/lib64/cgi-bin to reduce server overloading
#
# ProxyPass /SOGo/casProxy http://localhost/cgi-bin/cas-proxy-validate.py
# <Proxy http://localhost/app/cas-proxy-validate.py>
#   Order deny,allow
#   Allow from your-cas-host-addr
# </Proxy>

ProxyPassInterpolateEnv On
ProxyPass /SOGo http://127.0.0.1:20000/SOGo interpolate
ProxyPass /card/SOGo http://127.0.0.1:20000/SOGo interpolate
ProxyPass /card/principals http://127.0.0.1:20000/SOGo/dav/ interpolate
ProxyPass /card/ http://127.0.0.1:20000/SOGo/dav/ interpolate
ProxyPass /principals http://127.0.0.1:20000/SOGo/dav/ interpolate
ProxyPass /Microsoft-Server-ActiveSync http://127.0.0.1:20000/SOGo/Microsoft-Server-ActiveSync retry=60 connectiontimeout=5 timeout=360

SetEnvIf Host (.*) REQUEST_HOST=\$1

<Proxy http://127.0.0.1:20000/SOGo>
## adjust the following to your configuration
  RequestHeader set "x-webobjects-server-port" "443"
  RequestHeader set "x-webobjects-server-name" "%{REQUEST_HOST}e"
  RequestHeader set "x-webobjects-server-url" "https://%{REQUEST_HOST}e/SOGo"

## When using proxy-side autentication, you need to uncomment and
## adjust the following line:
#  RequestHeader set "x-webobjects-remote-user" "%{REMOTE_USER}e"

  RequestHeader set "x-webobjects-server-protocol" "HTTP/1.0"
  RequestHeader set "x-webobjects-remote-host" %{REMOTE_HOST}e env=REMOTE_HOST

  AddDefaultCharset UTF-8

  Order allow,deny
  Allow from all
</Proxy>

## We use mod_rewrite to pass remote address to the SOGo proxy.
# The remote address will appear in SOGo's log files and in the X-Forward
# header of emails.
RewriteEngine On
RewriteRule ^/sogo/?\$ /SOGo/ [R=301,L]
RewriteRule ^/SOGo(/.*)?\$ /SOGo\$1 [env=REMOTE_HOST:%{REMOTE_ADDR},PT]

SOGOFE

    }

    $OUT = $sogoConf;
}
